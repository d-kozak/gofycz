{
  "version": 3,
  "sources": [
    "webpack:///./src/$_lazy_route_resource lazy namespace object",
    "webpack:///./src/app/_service/task.service.ts",
    "webpack:///./src/app/app-routing.module.ts",
    "webpack:///./src/app/app.component.css",
    "webpack:///./src/app/app.component.html",
    "webpack:///./src/app/app.component.ts",
    "webpack:///./src/app/app.module.ts",
    "webpack:///./src/app/task/task.component.css",
    "webpack:///./src/app/task/task.component.html",
    "webpack:///./src/app/task/task.component.ts",
    "webpack:///./src/environments/environment.ts",
    "webpack:///./src/main.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "main.js",
  "sourcesContent": [
    "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";",
    "import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {GofyczTask} from \"../model/GofyczTask\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private baseUrl: string = \"https://gofycz.herokuapp.com\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getRandomTask(): Observable<GofyczTask> {\n    return this.http.get<GofyczTask>(`${this.baseUrl}/api/random-task`)\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
    "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"",
    "module.exports = \"<h1>{{title}}</h1>\\n<app-task></app-task>\\n\"",
    "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Get out of your comfort zone';\n}\n",
    "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport {TaskService} from \"./_service/task.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
    "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuY3NzIn0= */\"",
    "module.exports = \"<p>{{randomTask.challenge}}</p>\\n<button (click)=\\\"newChallenge()\\\">New challenge</button>\\n\"",
    "import {Component, OnInit} from '@angular/core';\nimport {TaskService} from \"../_service/task.service\";\nimport {GofyczTask} from \"../model/GofyczTask\";\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  randomTask: GofyczTask = {\n    challenge: 'Loading...'\n  };\n\n  constructor(private taskService: TaskService) {\n  }\n\n  ngOnInit() {\n    this.randomChallenge();\n  }\n\n  newChallenge() {\n    this.randomChallenge()\n  }\n\n  private randomChallenge() {\n    this.taskService.getRandomTask()\n      .subscribe(\n        task => this.randomTask = task\n      );\n  }\n}\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"
  ],
  "sourceRoot": ""
}